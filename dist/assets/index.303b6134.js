var W=Object.defineProperty;var V=(e,t,r)=>t in e?W(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var c=(e,t,r)=>(V(e,typeof t!="symbol"?t+"":t,r),r);import{V as d,a as C,r as F,b as j,f as B,L as u,m as z,c as K,d as H,C as g,P as Z,e as G,l as N,F as T,t as X,w as Q,s as Y,v as ee,B as te,I as re}from"./vendor.613b3a4a.js";const oe=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function r(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerpolicy&&(n.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?n.credentials="include":o.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(o){if(o.ep)return;o.ep=!0;const n=r(o);fetch(o.href,n)}};oe();d.use(C);const D={selectedProperties:null,requiresParseFixing:!1,requiresWindingOrderFix:!1,geojsonString:`{
  "$schema": "https://json.schemastore.org/geojson.json",
  "type": "FeatureCollection",
  "features": []
}`,dodgyGeoJsonString:"",githubAccessToken:null,githubUsername:null},se={geojson:e=>JSON.parse(e.geojsonString),featureCount:e=>{const t=JSON.parse(D.geojsonString);return t.type==="FeatureCollection"?t.features.length:t.type==="GeometryCollection"?t.geometries.length:t.type==="Feature"||t.type==="Geometry"?1:0}},ne={setGitHubUsername(e,t){e.githubUsername=t},setGitHubAccessToken(e,t){e.githubAccessToken=t},setGeoJSON(e,t){typeof t!="string"&&(t=JSON.stringify(t,null,2)),e.geojsonString=t},setSelectedProperties(e,t){e.selectedProperties=t.properties},setRequiresParsingFix(e,t){e.requiresParseFixing=t},setRequiresWindingOrderFix(e,t){e.requiresWindingOrderFix=t},setDodgyString(e,t){e.dodgyGeoJsonString=t},clearRequiresFixes(e){e.requiresWindingOrderFix=!1,e.requiresParseFixing=!1}},ie={setFeatures(e,t){e.commit("setGeoJSON",t)},fixFeatures(e){e.commit("setGeoJSON",e.getters.geojson.replace(/(['"])?(\w+)(['"])?:([^/])/g,'"$2":$4'))},rewindFeatures(e){e.commit("setGeoJSON",F(e.getters.geojson))},clearFeatures(e){e.commit("setGeoJSON",`{
  "$schema": "https://json.schemastore.org/geojson.json",
  "type": "FeatureCollection",
  "features": []
}`)},randomFeatures(e){e.commit("setGeoJSON",j(25,{bbox:[-180,-90,180,90]}))},convertFeatures(e,t){e.commit("setGeoJSON",B(t))}},ae={state:D,getters:se,mutations:ne,actions:ie};var h=new C.Store(ae);delete u.Icon.Default.prototype._getIconUrl;u.Icon.Default.mergeOptions({iconRetinaUrl:z,iconUrl:K,shadowUrl:H});let p=null,l=null;function le(){const e=()=>{const t={lat:"35.689472",lng:"139.69175",zoom:"2"};return window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,(r,s,o)=>{t[s]=o}),t};l=u.map("map").setView([e().lat,e().lng],e().zoom),u.tileLayer("http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",{attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions">CartoDB</a>',subdomains:"abcd",maxZoom:19,minZoom:0,crs:u.CRS.Simple}).addTo(l),p=u.geoJSON(null,{style(){return{color:"#007bff"}}}).addTo(l),l.addControl(new u.Control.Draw({position:"topright",edit:{featureGroup:p,poly:{allowIntersection:!1}},draw:{polygon:{allowIntersection:!1},circlemarker:!1,circle:!1}})),l.on("click",$),l.on(u.Draw.Event.DRAWSTART,t=>{l.off("click",$)}),l.on(u.Draw.Event.DRAWSTOP,()=>{l.on("click",$)}),l.on(u.Draw.Event.CREATED,t=>{p.addLayer(t.layer),h.commit("setGeoJSON",p.toGeoJSON())}),l.on(u.Draw.Event.EDITED,()=>{h.commit("setGeoJSON",p.toGeoJSON())}),l.on(u.Draw.Event.DELETED,()=>{h.commit("setGeoJSON",p.toGeoJSON())}),l.on("mousemove",t=>{document.getElementById("coordinate").innerText=t.latlng.toString()})}let v=null;function ce(){v.setStyle({color:"#ffc107"})}function ue(){v!==null&&v.setStyle({color:"#666C79"})}function $(){h.commit("setSelectedProperties",null)}function de(e){u.DomEvent.stop(e),ue(),v=e.target,ce(),h.commit("setSelectedProperties",v.feature)}function E(){l.fitBounds(p.getBounds())}function pe(e){p.clearLayers(),p.addData(e),p.eachLayer(t=>{t.on("click",de)})}var fe=Object.defineProperty,me=Object.getOwnPropertyDescriptor,he=(e,t,r,s)=>{for(var o=s>1?void 0:s?me(t,r):t,n=e.length-1,i;n>=0;n--)(i=e[n])&&(o=(s?i(t,r,o):i(o))||o);return s&&o&&fe(t,r,o),o};let y=class extends d{mounted(){le()}};y=he([g],y);var ge=function(){var e=this,t=e.$createElement;return e._self._c,e._m(0)},ve=[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"h-100 w-100",attrs:{id:"map"}},[r("div",{attrs:{id:"coordinate"}},[e._v("(0,0)")])])}];function b(e,t,r,s,o,n,i,I){var a=typeof e=="function"?e.options:e;t&&(a.render=t,a.staticRenderFns=r,a._compiled=!0),s&&(a.functional=!0),n&&(a._scopeId="data-v-"+n);var m;if(i?(m=function(f){f=f||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!f&&typeof __VUE_SSR_CONTEXT__!="undefined"&&(f=__VUE_SSR_CONTEXT__),o&&o.call(this,f),f&&f._registeredComponents&&f._registeredComponents.add(i)},a._ssrRegister=m):o&&(m=I?function(){o.call(this,(a.functional?this.parent:this).$root.$options.shadowRoot)}:o),m)if(a.functional){a._injectStyles=m;var k=a.render;a.render=function(A,x){return m.call(x),k(A,x)}}else{var w=a.beforeCreate;a.beforeCreate=w?[].concat(w,m):[m]}return{exports:e,options:a}}const J={};var be=b(y,ge,ve,!1,_e,null,null,null);function _e(e){for(let t in J)this[t]=J[t]}var $e=function(){return be.exports}(),ye=Object.defineProperty,Oe=Object.getOwnPropertyDescriptor,R=(e,t,r,s)=>{for(var o=s>1?void 0:s?Oe(t,r):t,n=e.length-1,i;n>=0;n--)(i=e[n])&&(o=(s?i(t,r,o):i(o))||o);return s&&o&&ye(t,r,o),o};let _=class extends d{constructor(){super(...arguments);c(this,"loadDataModal",!1);c(this,"creatingGist",!1);c(this,"remoteUrl","");c(this,"pointsModalOpen",!1);c(this,"numberOfPoints",10);c(this,"bbox","-180, -90, 180, 90");c(this,"loadingGithubUser",!1)}get githubClientId(){return{}.VITE_GITHUB_CLIENT_ID}get githubAccessToken(){return this.$store.state.githubAccessToken!==null}get githubUsername(){return this.$store.state.githubUsername===null?null:this.$store.state.githubUsername.login}get githubImage(){return this.$store.state.githubUsername===null?null:this.$store.state.githubUsername.avatar_url}get doesntRequireParseFixing(){return!this.$store.state.requiresParseFixing}get doesntRequireWindingFixing(){return!this.$store.state.requiresWindingOrderFix}get featureCount(){return this.$store.getters.featureCount}get currentGeojson(){return this.$store.getters.geojson}get supportedFormats(){return[{label:"Shapefile",value:"shp",disabled:!1},{label:"TopoJSON",value:"topojson",disabled:!1},{label:"WKT",value:"wkt",disabled:!1},{label:"Github Gist",value:"gist",disabled:!this.githubAccessToken}]}zoomTo(){E()}createRandomPoints(){this.bbox.split(",").length-1!=3&&(this.bbox="-180, -90, 180, 90");const e=j(this.numberOfPoints,{bbox:JSON.parse("["+this.bbox+"]")});this.$store.commit("setGeoJSON",{type:"FeatureCollection",features:this.currentGeojson.features.concat(e.features)})}async loadFromUrl(){try{const e=await G.get(this.remoteUrl),t=N.hint(e.data);let r=!1;if(t.forEach(s=>{s.message.startsWith("Parse error")&&(r=!0)}),r){this.$bvToast.toast("The specified file could not be parsed as geojson",{title:"Could not parse geojson",variant:"warning"});return}this.$store.commit("setGeoJSON",e.data),E()}catch{this.$bvToast.toast("File could not be retrieved from specified url",{title:"Could not retrieve file",variant:"danger"})}}saveToGeojson(){const e=new File([this.$store.state.geojsonString],"exported.geojson",{type:"application/geo+json;charset=utf-8"});T.saveAs(e)}async createShare(){this.creatingGist=!0;const e=await this.createGist();this.creatingGist=!1;const t=new URL(document.location.href),r=t.searchParams;r.delete("gist"),r.append("gist",e.data.id),window.history.pushState({},null,t.toString()),navigator.clipboard.writeText(t.toString()).then(()=>{this.$bvToast.toast("Share copied to clipboard",{title:"Share",variant:"success"})})}async signin(){window.open(`https://github.com/login/oauth/authorize?client_id=${this.githubClientId}&scope=gist,read:user`,"oauth","height=400,width=600")}createGist(){const e=this;return G({url:"https://api.github.com/gists",method:"POST",headers:{Accept:"application/json",Authorization:`token ${e.$store.state.githubAccessToken}`},data:{description:"GeoJson saved from geojson-editor",public:!0,files:{"data.geojson":{content:e.$store.state.geojsonString}}}})}async saveInFormats(e){let t=null;const r=e;if(e==="gist"){const o=await this.createGist();this.$bvToast.toast(o.data.id,{title:"Gist created",solid:!0});return}if(e==="topojson"&&(t=X(this.$store.getters.geojson.features)),e==="wkt"&&(t=Q.stringify({type:"GeometryCollection",geometries:this.$store.getters.geojson.features.map(o=>o.geometry)})),e==="shp"){const o={folder:"myshapes",types:{point:"mypoints",polygon:"mypolygons",line:"mylines"}};Y.download(this.$store.getters.geojson,o);return}const s=new File([JSON.stringify(t)],`export.${r}`,{type:"text/plain;charset=utf-8"});T.saveAs(s)}};R([Z()],_.prototype,"loadingGithubUser",2);_=R([g],_);var Se=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("b-navbar",{attrs:{type:"dark",variant:"dark"}},[r("b-navbar-brand",{attrs:{href:"#"}},[e._v("Vite GeoJson Editor")]),r("b-navbar-nav",{staticClass:"ml-auto"},[r("b-nav-item-dropdown",{attrs:{text:"Fix",right:""}},[r("b-dropdown-item",{attrs:{disabled:e.doesntRequireParseFixing},on:{click:function(s){return e.$store.dispatch("fixFeatures")}}},[e._v(" Fix Quotation Marks on Keys ")]),r("b-dropdown-item",{attrs:{disabled:e.doesntRequireWindingFixing},on:{click:function(s){return e.$store.dispatch("rewindFeatures")}}},[e._v(" Fix Winding Order ")])],1),r("b-nav-item-dropdown",{attrs:{text:"Tools",right:""}},[r("b-dropdown-item",{on:{click:function(s){e.pointsModalOpen=!e.pointsModalOpen}}},[e._v(" Create Random Points ")]),r("b-dropdown-item",{on:{click:e.zoomTo}},[e._v("Zoom to Features")]),r("b-dropdown-item",{on:{click:function(s){return e.$store.dispatch("convertFeatures")}}},[e._v(" Convert Multipart to Singlepart geometries ")])],1),r("b-nav-form",{staticClass:"mx-3"},[r("b-button",{staticClass:"mr-3",on:{click:function(s){e.loadDataModal=!e.loadDataModal}}},[e._v(" Load from URL ")]),r("b-dropdown",{attrs:{right:"",text:"Save",variant:"primary"}},e._l(e.supportedFormats,function(s){return r("b-dropdown-item",{key:s.value,attrs:{name:s.value,disabled:s.disabled},on:{click:function(o){return e.saveInFormats(s.value)}}},[e._v(" "+e._s(s.label)+" ")])}),1)],1),r("b-nav-item",{attrs:{href:"https://github.com/logue/vite-geojson-editor"}},[r("b-icon",{attrs:{icon:"github","aria-hidden":"false"}})],1),e.githubClientId?[e.githubUsername===null&&!e.loadingGithubUser?r("b-nav-item",{on:{click:e.signin}},[e._v(" Sign in ")]):r("b-nav-item",[r("b-avatar",{attrs:{src:e.githubImage,text:e.githubUsername}})],1)]:e._e()],2),r("b-modal",{attrs:{title:"Load from URL"},on:{ok:e.loadFromUrl},model:{value:e.loadDataModal,callback:function(s){e.loadDataModal=s},expression:"loadDataModal"}},[r("b-form-input",{attrs:{placeholder:"Url of geojson",required:""},model:{value:e.remoteUrl,callback:function(s){e.remoteUrl=s},expression:"remoteUrl"}})],1),r("b-modal",{attrs:{title:"Number of points to create"},on:{ok:e.createRandomPoints},model:{value:e.pointsModalOpen,callback:function(s){e.pointsModalOpen=s},expression:"pointsModalOpen"}},[r("b-form-group",{attrs:{label:"Number of points to create","label-for":"numberOfPoints"}},[r("b-form-input",{attrs:{id:"numberOfPoints",type:"number",placeholder:"10",required:""},model:{value:e.numberOfPoints,callback:function(s){e.numberOfPoints=s},expression:"numberOfPoints"}})],1),r("b-form-group",{attrs:{label:"Bounding box","label-for":"bbox"}},[r("b-form-input",{attrs:{id:"bbox",type:"text",placeholder:"-180, -90, 180, 90",required:""},model:{value:e.bbox,callback:function(s){e.bbox=s},expression:"bbox"}})],1)],1)],1)},Pe=[];const U={};var we=b(_,Se,Pe,!1,xe,null,null,null);function xe(e){for(let t in U)this[t]=U[t]}var Ce=function(){return we.exports}(),Fe=Object.defineProperty,je=Object.getOwnPropertyDescriptor,Ge=(e,t,r,s)=>{for(var o=s>1?void 0:s?je(t,r):t,n=e.length-1,i;n>=0;n--)(i=e[n])&&(o=(s?i(t,r,o):i(o))||o);return s&&o&&Fe(t,r,o),o};let O=class extends d{constructor(){super(...arguments);c(this,"errorLines",[]);c(this,"requiresParseFixing",!1);c(this,"errors",[]);c(this,"cmOptions",{tabSize:2,cursorScrollMargin:50,mode:"text/javascript",styleActiveLine:!0,lineNumbers:!0,line:!0})}get code(){return this.$store.state.geojsonString}onCmCodeChange(e){if(this.cleanErrorMarks(),this.errorLines=[],this.errors=N.hint(e),this.errors.forEach(t=>{t.message.startsWith("Parse error")?this.$store.commit("setRequiresParsingFix",!0):t.message.startsWith("Polygons and MultiPolygons")?this.$store.commit("setRequiresWindingOrderFix",!0):this.$store.commit("setRequiresParsingFix",!1),this.errorLines.push(t.line)},this),this.errors.length===0){const t=JSON.parse(e);pe(t),this.$store.commit("setGeoJSON",t)}this.markErrors()}markErrors(){const e=this.$refs.myCm.codemirror;this.errors.forEach(t=>{e.doc.addLineClass(t.line+1,"gutter","geojsonError")},this)}cleanErrorMarks(){const e=this.$refs.myCm.codemirror;this.errorLines.forEach(t=>{e.doc.removeLineClass(t+1,"gutter","geojsonError")},this),this.$store.commit("clearRequiresFixes")}};O=Ge([g({components:{codemirror:ee.exports.codemirror}})],O);var Ne=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("codemirror",{ref:"myCm",attrs:{value:e.code,options:e.cmOptions},on:{input:e.onCmCodeChange}})},Te=[];const M={};var De=b(O,Ne,Te,!1,Ee,null,null,null);function Ee(e){for(let t in M)this[t]=M[t]}var Je=function(){return De.exports}(),Re=Object.defineProperty,Ue=Object.getOwnPropertyDescriptor,Me=(e,t,r,s)=>{for(var o=s>1?void 0:s?Ue(t,r):t,n=e.length-1,i;n>=0;n--)(i=e[n])&&(o=(s?i(t,r,o):i(o))||o);return s&&o&&Re(t,r,o),o};let S=class extends d{constructor(){super(...arguments);c(this,"fields",[{label:"Property",key:"property",sortable:!0},{label:"Value",key:"value",sortable:!0}])}get selectedProperties(){return this.$store.state.selectedProperties}get propertyKeys(){return Object.keys(this.selectedProperties)}get tableProperties(){return this.propertyKeys.map(e=>({property:e,value:this.selectedProperties[e]}))}};S=Me([g],S);var Le=function(){var e=this,t=e.$createElement,r=e._self._c||t;return e.selectedProperties!==null?r("div",{staticClass:"feature-properties leaflet-bar"},[r("b-table",{attrs:{striped:"",hover:"",fields:e.fields,items:e.tableProperties}})],1):e._e()},qe=[];const L={};var Ie=b(S,Le,qe,!1,ke,null,null,null);function ke(e){for(let t in L)this[t]=L[t]}var Ae=function(){return Ie.exports}(),We=Object.defineProperty,Ve=Object.getOwnPropertyDescriptor,Be=(e,t,r,s)=>{for(var o=s>1?void 0:s?Ve(t,r):t,n=e.length-1,i;n>=0;n--)(i=e[n])&&(o=(s?i(t,r,o):i(o))||o);return s&&o&&We(t,r,o),o};let P=class extends d{beforeCreate(){document.title="Vite GeoJson Editor"}mounted(){const t=new URL(document.location.href).searchParams.get("data");if(t){const r=JSON.stringify(JSON.parse(t),null,2);this.$store.commit("setGeoJSON",r);const s=F(this.$store.getters.geojson);this.$store.commit("setGeoJSON",s)}}};P=Be([g({components:{Map:$e,NaviBar:Ce,CodeArea:Je,Properties:Ae}})],P);var ze=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"d-flex flex-column h-100"},[r("NaviBar"),r("main",{staticClass:"container-fluid px-0 h-100",attrs:{role:"main"}},[r("div",{staticClass:"float-left w-50 h-100"},[r("Map")],1),r("div",{staticClass:"float-right w-50 h-100"},[r("code-area")],1)])],1)},Ke=[];const q={};var He=b(P,ze,Ke,!1,Ze,null,null,null);function Ze(e){for(let t in q)this[t]=q[t]}var Xe=function(){return He.exports}();d.use(te);d.use(re);d.config.productionTip=!1;new d({render:e=>e(Xe),store:h}).$mount("#app");
